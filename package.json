{
  "name": "synthwave-liquid-glass",
  "displayName": "SynthWave Liquid Glass",
  "description": "A retro 80s-inspired dark theme for VS Code, blending synthwave neon and Monokai colors with a liquid glass effect.",
  "version": "0.0.1",
  "author": "Sam Kumar",
  "publisher": "DevLabHQ",
  "icon": "assets/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/sammykumar/synthwave-liquid-glass"
  },
  "engines": {
    "vscode": "^1.96.0"
  },
  "extensionKind": [
    "ui"
  ],
  "keywords": [
    "retro",
    "80s",
    "monokai",
    "neon",
    "synthwave",
    "dark",
    "theme",
    "apple-intelligence"
  ],
  "categories": [
    "Themes"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "synthwave-liquid-glass.enableGlow",
        "title": "Synthwave Liquid Glass: Enable Glow"
      },
      {
        "command": "synthwave-liquid-glass.cleanup",
        "title": "Synthwave Liquid Glass: Clean Up Workbench HTML"
      }
    ],
    "configuration": {
      "title": "SynthWave Liquid Glass",
      "properties": {}
    },
    "themes": [
      {
        "label": "SynthWave Liquid Glass",
        "uiTheme": "vs-dark",
        "path": "./themes/synthwave-color-theme.json"
      }
    ]
  },
  "dependencies": {
    "semver": "^7.7.1"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/semver": "^7.7.0",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.4.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  },
  "scripts": {
    "test": "vscode-test",
    "dev": "vscode-test",
    "dev:watch": "npm-run-all -p watch:esbuild dev:instance",
    "dev:instance": "npm run dev .vscode-dev.mjs",
    "dev:fresh": "rm -rf /tmp/.vscode-dev && npm run dev:instance",
    "pretest": "npm run clean-test && npm run compile-tests && npm run compile && npm run lint",
    "clean-test": "rm -rf .vscode-test out",
    "compile-tests": "tsc -p . --outDir out",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "lint": "eslint src",
    "vscode:prepublish": "npm run package",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "watch-tests": "tsc -p . -w --outDir out",
    "clean": "rm -rf dist out .vscode-test",
    "check-types": "tsc --noEmit",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish",
    "version:patch": "npm version patch --no-git-tag-version",
    "version:minor": "npm version minor --no-git-tag-version",
    "version:major": "npm version major --no-git-tag-version",
    "feature:patch": "npm run package && npm run version:patch && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && git push origin $(git branch --show-current) && gh pr create --base master --fill",
    "feature:minor": "npm run package && npm run version:minor && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && git push origin $(git branch --show-current) && gh pr create --base master --fill",
    "feature:major": "npm run package && npm run version:major && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && git push origin $(git branch --show-current) && gh pr create --base master --fill",
    "release:tag": "git tag v$(node -p 'require(\"./package.json\").version') -m \"Release v$(node -p 'require(\"./package.json\").version')\" && git push origin v$(node -p 'require(\"./package.json\").version')",
    "release:current": "npm run release:tag"
  }
}
